# .github/workflows/release.yml
name: Maven Release to GitHub Packages

on:
    pull_request:
        branches:
          - main # Trigger when a PR is merged into the 'main' branch
        types: [closed] # Specifically trigger when a pull request is closed
    push:
       tags:
        - 'v*' # Trigger on pushes of tags starting with 'v' (e.g., v1.0.0, v1.1.0)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # Use a standard runner environment

    permissions:
      contents: read # Allow reading the repository contents
      packages: write # Allow writing packages to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Checks out the repository code

      - name: Set up JDK 17 # Or your desired Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Use a common distribution like Temurin (AdoptOpenJDK)
          cache: 'maven' # Cache Maven dependencies

      - name: Build and Deploy to GitHub Packages
        run: |
          # Create a temporary settings.xml file for authentication
          # We use GITHUB_TOKEN provided by GitHub Actions for authentication
          # The server id 'github' must match the id in your pom.xml's distributionManagement
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>podzilla-github</id> <username>Podzilla</username> <password>${{ secrets.GITHUB_TOKEN }}</password> </server>
            </servers>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/Podzilla/mq-utils-lib</url>
                    <snapshots><enabled>true</enabled></snapshots>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
          </settings>
          EOF

          # Verify the settings file (optional)
          # cat ~/.m2/settings.xml

          # Run the Maven deploy command
          # -B: Batch mode (non-interactive)
          # -V: Show version
          # -s ~/.m2/settings.xml: Use the generated settings file
          # The deploy goal automatically picks up the version from pom.xml (which should be the tagged version)
          mvn -B clean deploy -s ~/.m2/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Make the token available as an environment variable